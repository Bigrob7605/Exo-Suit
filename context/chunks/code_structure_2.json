{
  "chunk_type": "code_samples",
  "chunk_id": "code_structure_2",
  "title": "Code Structure Analysis - Part 2",
  "description": "Code analysis for files 51-100",
  "content": {
    "files_analyzed": [
      "ops\\gpu-monitor.ps1",
      "ops\\GPU-RAG-V4.ps1",
      "ops\\Import-Indexer-V4.ps1",
      "ops\\log-analyzer-simple.ps1",
      "ops\\log-analyzer-v5.ps1",
      "ops\\make-pack.ps1",
      "ops\\max-perf.ps1",
      "ops\\Performance-Test-Suite-V4.ps1",
      "ops\\PHASE_3_GPU_PUSH_ENGINE.py",
      "ops\\PHOENIX_RECOVERY_SYSTEM_V5.py",
      "ops\\placeholder-scan.ps1",
      "ops\\Placeholder-Scanner-V4.ps1",
      "ops\\Power-Management-V4.ps1",
      "ops\\Project-Health-Scanner-V4.ps1",
      "ops\\quick-scan.ps1",
      "ops\\RTX-4070-Accelerator-V5.ps1",
      "ops\\RTX-4070-Batch-Processor-V5.ps1",
      "ops\\RTX-4070-Optimizer.ps1",
      "ops\\RTX-4070-Real-Processor-V5.ps1",
      "ops\\RTX-4070-Simple-V5.ps1",
      "ops\\Scan-Secrets-V4.ps1",
      "ops\\sentinel_mesh_config.json",
      "ops\\smart-log-manager-v5.ps1",
      "ops\\Speed-Boost-V4.ps1",
      "ops\\symbol-index-v4.json",
      "ops\\Symbol-Indexer-V4.ps1",
      "ops\\test-simple.ps1",
      "ops\\TruthForge-Auditor-V5.ps1",
      "ops\\Ultimate-Overclock-Speed-Boost-V5.ps1",
      "ops\\Ultimate-Speed-Boost-V4.ps1",
      "ops\\V5_CONSOLIDATION_MASTER.py",
      "ops\\VisionGap-Engine-V5.ps1",
      "ops\\VISIONGAP_ENGINE.py",
      "rag\\build_index.py",
      "rag\\build_index_v3.py",
      "rag\\context.json",
      "rag\\device_manager.py",
      "rag\\dual_mode_test_report.json",
      "rag\\embed.ps1",
      "rag\\embedding_engine.py",
      "rag\\emoji_scanner.py",
      "rag\\emoji_scanner_fixed.py",
      "rag\\emoji_scanner_simple.py",
      "rag\\emoji_scanner_vram_optimized.py",
      "rag\\faiss_gpu_compat.py",
      "rag\\hybrid_performance_report_v4.json",
      "rag\\hybrid_rag_v4.py",
      "rag\\rag_system_test_report.json",
      "rag\\retrieve.py",
      "rag\\retrieve_v3.py"
    ],
    "structure_data": {
      "ops\\gpu-monitor.ps1": {
        "type": "powershell",
        "imports": [],
        "functions": [
          {
            "name": "Get-GPUMetrics",
            "line": 39
          },
          {
            "name": "Show-GPUMetrics",
            "line": 69
          },
          {
            "name": "Start-ContinuousMonitoring",
            "line": 92
          },
          {
            "name": "Start-GPUBenchmark",
            "line": 124
          },
          {
            "name": "Optimize-GPUSettings",
            "line": 236
          }
        ],
        "line_count": 305
      },
      "ops\\GPU-RAG-V4.ps1": {
        "type": "powershell",
        "imports": [],
        "functions": [
          {
            "name": "Write-Log",
            "line": 42
          },
          {
            "name": "Test-SystemRequirements",
            "line": 61
          },
          {
            "name": "Get-GPUInfo",
            "line": 96
          },
          {
            "name": "Test-PythonEnvironment",
            "line": 139
          },
          {
            "name": "Initialize-RAGSystem",
            "line": 180
          },
          {
            "name": "Build-DocumentIndex",
            "line": 277
          },
          {
            "name": "Process-RAGQuery",
            "line": 438
          },
          {
            "name": "Start-RAGBenchmark",
            "line": 547
          },
          {
            "name": "Start-GPURAG",
            "line": 625
          }
        ],
        "line_count": 739
      },
      "ops\\Import-Indexer-V4.ps1": {
        "type": "powershell",
        "imports": [],
        "functions": [
          {
            "name": "Write-ImportIndexerLog",
            "line": 194
          },
          {
            "name": "Test-FileAccess",
            "line": 211
          },
          {
            "name": "Get-FileEncoding",
            "line": 223
          },
          {
            "name": "Read-FileContent",
            "line": 246
          },
          {
            "name": "Parse-ImportsAST",
            "line": 264
          },
          {
            "name": "Parse-ImportsFallback",
            "line": 354
          },
          {
            "name": "Process-File",
            "line": 401
          },
          {
            "name": "Get-SupportedFiles",
            "line": 458
          },
          {
            "name": "Start-ImportIndexing",
            "line": 496
          }
        ],
        "line_count": 670
      },
      "ops\\log-analyzer-simple.ps1": {
        "type": "powershell",
        "imports": [],
        "functions": [
          {
            "name": "Analyze-LogChunk",
            "line": 65
          },
          {
            "name": "Generate-IntelligentSummary",
            "line": 131
          }
        ],
        "line_count": 269
      },
      "ops\\log-analyzer-v5.ps1": {
        "type": "powershell",
        "imports": [],
        "functions": [
          {
            "name": "Analyze-LogChunk",
            "line": 71
          },
          {
            "name": "Generate-IntelligentSummary",
            "line": 137
          }
        ],
        "line_count": 283
      },
      "ops\\make-pack.ps1": {
        "type": "powershell",
        "imports": [],
        "functions": [],
        "line_count": 46
      },
      "ops\\max-perf.ps1": {
        "type": "powershell",
        "imports": [],
        "functions": [],
        "line_count": 131
      },
      "ops\\Performance-Test-Suite-V4.ps1": {
        "type": "powershell",
        "imports": [],
        "functions": [
          {
            "name": "Get-SystemInformation",
            "line": 39
          },
          {
            "name": "Get-GPUInformation",
            "line": 65
          },
          {
            "name": "Test-RAGPerformance",
            "line": 91
          },
          {
            "name": "Test-ImportIndexerPerformance",
            "line": 125
          },
          {
            "name": "Test-SymbolIndexerPerformance",
            "line": 180
          },
          {
            "name": "Test-EmojiSentinelPerformance",
            "line": 211
          },
          {
            "name": "with",
            "line": 228
          },
          {
            "name": "Test-ProjectHealthScannerPerformance",
            "line": 259
          },
          {
            "name": "Test-GPUPerformance",
            "line": 285
          },
          {
            "name": "Run-PerformanceTests",
            "line": 333
          },
          {
            "name": "Save-TestResults",
            "line": 363
          },
          {
            "name": "Display-TestSummary",
            "line": 390
          }
        ],
        "line_count": 460
      },
      "ops\\PHASE_3_GPU_PUSH_ENGINE.py": {
        "type": "python",
        "imports": [
          "os",
          "time",
          "hashlib",
          "re",
          "json",
          "mmap",
          "logging",
          "pathlib.Path",
          "concurrent.futures.ThreadPoolExecutor",
          "concurrent.futures.as_completed",
          "collections.Counter",
          "datetime.datetime",
          "typing.Dict",
          "typing.List",
          "typing.Any",
          "typing.Optional",
          "torch",
          "numpy",
          "sentence_transformers.SentenceTransformer",
          "faiss",
          "traceback"
        ],
        "functions": [
          {
            "name": "demonstrate_integrated_system",
            "line": 1171,
            "args": []
          },
          {
            "name": "main",
            "line": 1251,
            "args": []
          },
          {
            "name": "__init__",
            "line": 64,
            "args": [
              "self",
              "belief_id",
              "content",
              "confidence"
            ]
          },
          {
            "name": "__init__",
            "line": 70,
            "args": [
              "self",
              "memory_id",
              "content",
              "timestamp"
            ]
          },
          {
            "name": "__init__",
            "line": 85,
            "args": [
              "self",
              "model_name"
            ]
          },
          {
            "name": "_initialize_model",
            "line": 114,
            "args": [
              "self"
            ]
          },
          {
            "name": "build_document_index",
            "line": 130,
            "args": [
              "self",
              "input_path",
              "output_dir"
            ]
          },
          {
            "name": "query_index",
            "line": 240,
            "args": [
              "self",
              "query",
              "top_k"
            ]
          },
          {
            "name": "benchmark_performance",
            "line": 278,
            "args": [
              "self"
            ]
          },
          {
            "name": "set_performance_mode",
            "line": 350,
            "args": [
              "self",
              "mode"
            ]
          },
          {
            "name": "get_performance_stats",
            "line": 376,
            "args": [
              "self"
            ]
          },
          {
            "name": "__init__",
            "line": 394,
            "args": [
              "self",
              "agent_id",
              "personality"
            ]
          },
          {
            "name": "simulate_response",
            "line": 412,
            "args": [
              "self",
              "prompt",
              "context"
            ]
          },
          {
            "name": "_detect_contradictions",
            "line": 459,
            "args": [
              "self",
              "prompt"
            ]
          },
          {
            "name": "_is_contradictory",
            "line": 477,
            "args": [
              "self",
              "prompt",
              "belief"
            ]
          },
          {
            "name": "_resolve_paradoxes",
            "line": 493,
            "args": [
              "self",
              "contradictions"
            ]
          },
          {
            "name": "_generate_response",
            "line": 517,
            "args": [
              "self",
              "prompt",
              "context"
            ]
          },
          {
            "name": "_get_relevant_memories",
            "line": 540,
            "args": [
              "self",
              "prompt"
            ]
          },
          {
            "name": "_record_interaction",
            "line": 552,
            "args": [
              "self",
              "prompt",
              "response",
              "contradictions"
            ]
          },
          {
            "name": "_calculate_confidence",
            "line": 565,
            "args": [
              "self",
              "response"
            ]
          },
          {
            "name": "add_belief",
            "line": 576,
            "args": [
              "self",
              "content",
              "confidence",
              "source"
            ]
          },
          {
            "name": "add_memory",
            "line": 591,
            "args": [
              "self",
              "content",
              "importance"
            ]
          },
          {
            "name": "get_status",
            "line": 605,
            "args": [
              "self"
            ]
          },
          {
            "name": "export_state",
            "line": 618,
            "args": [
              "self"
            ]
          },
          {
            "name": "load_state",
            "line": 630,
            "args": [
              "self",
              "state"
            ]
          },
          {
            "name": "__init__",
            "line": 656,
            "args": [
              "self"
            ]
          },
          {
            "name": "_gpu_intensive_processing",
            "line": 695,
            "args": [
              "self",
              "content"
            ]
          },
          {
            "name": "_cpu_fallback_processing",
            "line": 787,
            "args": [
              "self",
              "content"
            ]
          },
          {
            "name": "_analyze_content_intensive",
            "line": 795,
            "args": [
              "self",
              "file_path"
            ]
          },
          {
            "name": "__init__",
            "line": 861,
            "args": [
              "self",
              "max_workers"
            ]
          },
          {
            "name": "process_files",
            "line": 877,
            "args": [
              "self",
              "file_paths"
            ]
          },
          {
            "name": "__init__",
            "line": 942,
            "args": [
              "self"
            ]
          },
          {
            "name": "collect_test_files",
            "line": 946,
            "args": [
              "self",
              "num_files"
            ]
          },
          {
            "name": "run_gpu_intensive_test",
            "line": 971,
            "args": [
              "self",
              "num_files"
            ]
          },
          {
            "name": "__init__",
            "line": 1032,
            "args": [
              "self"
            ]
          },
          {
            "name": "_detect_gpu_capabilities",
            "line": 1042,
            "args": [
              "self"
            ]
          },
          {
            "name": "_setup_cuda_environment",
            "line": 1086,
            "args": [
              "self"
            ]
          },
          {
            "name": "optimize_for_workload",
            "line": 1109,
            "args": [
              "self",
              "workload_type"
            ]
          },
          {
            "name": "get_gpu_status",
            "line": 1139,
            "args": [
              "self"
            ]
          }
        ],
        "classes": [
          {
            "name": "AgentState",
            "line": 58,
            "methods": []
          },
          {
            "name": "AgentBelief",
            "line": 63,
            "methods": [
              "__init__"
            ]
          },
          {
            "name": "AgentMemory",
            "line": 69,
            "methods": [
              "__init__"
            ]
          },
          {
            "name": "HybridRAGEngine",
            "line": 79,
            "methods": [
              "__init__",
              "_initialize_model",
              "build_document_index",
              "query_index",
              "benchmark_performance",
              "set_performance_mode",
              "get_performance_stats"
            ]
          },
          {
            "name": "AgentSimulator",
            "line": 387,
            "methods": [
              "__init__",
              "simulate_response",
              "_detect_contradictions",
              "_is_contradictory",
              "_resolve_paradoxes",
              "_generate_response",
              "_get_relevant_memories",
              "_record_interaction",
              "_calculate_confidence",
              "add_belief",
              "add_memory",
              "get_status",
              "export_state",
              "load_state"
            ]
          },
          {
            "name": "GPUIntensiveProcessor",
            "line": 653,
            "methods": [
              "__init__",
              "_gpu_intensive_processing",
              "_cpu_fallback_processing",
              "_analyze_content_intensive"
            ]
          },
          {
            "name": "GPUIntensiveParallelProcessor",
            "line": 858,
            "methods": [
              "__init__",
              "process_files"
            ]
          },
          {
            "name": "GPUIntensiveTestEngine",
            "line": 939,
            "methods": [
              "__init__",
              "collect_test_files",
              "run_gpu_intensive_test"
            ]
          },
          {
            "name": "GPUAccelerator",
            "line": 1026,
            "methods": [
              "__init__",
              "_detect_gpu_capabilities",
              "_setup_cuda_environment",
              "optimize_for_workload",
              "get_gpu_status"
            ]
          }
        ],
        "line_count": 1289
      },
      "ops\\PHOENIX_RECOVERY_SYSTEM_V5.py": {
        "type": "python",
        "error": "unexpected indent (<unknown>, line 928)",
        "line_count": 0
      },
      "ops\\placeholder-scan.ps1": {
        "type": "powershell",
        "imports": [],
        "functions": [
          {
            "name": "IsInStringOrComment",
            "line": 84
          }
        ],
        "line_count": 198
      },
      "ops\\Placeholder-Scanner-V4.ps1": {
        "type": "powershell",
        "imports": [],
        "functions": [
          {
            "name": "Write-PlaceholderScannerLog",
            "line": 272
          },
          {
            "name": "Test-FileAccess",
            "line": 289
          },
          {
            "name": "Get-FileEncoding",
            "line": 301
          },
          {
            "name": "Read-FileContent",
            "line": 324
          },
          {
            "name": "Test-SeverityFilter",
            "line": 342
          },
          {
            "name": "Validate-Placeholder",
            "line": 349
          },
          {
            "name": "Parse-PlaceholdersAST",
            "line": 405
          },
          {
            "name": "Process-File",
            "line": 515
          },
          {
            "name": "Get-SupportedFiles",
            "line": 567
          },
          {
            "name": "Start-PlaceholderScanning",
            "line": 608
          }
        ],
        "line_count": 784
      },
      "ops\\Power-Management-V4.ps1": {
        "type": "powershell",
        "imports": [],
        "functions": [
          {
            "name": "Write-Log",
            "line": 27
          },
          {
            "name": "Test-SystemRequirements",
            "line": 46
          },
          {
            "name": "Get-PowerPlans",
            "line": 75
          },
          {
            "name": "Get-PowerPlanDetails",
            "line": 134
          },
          {
            "name": "Set-ActivePowerPlan",
            "line": 193
          },
          {
            "name": "New-PowerPlan",
            "line": 220
          },
          {
            "name": "Remove-PowerPlan",
            "line": 255
          },
          {
            "name": "Optimize-PowerPlan",
            "line": 294
          },
          {
            "name": "Start-PowerMonitoring",
            "line": 369
          },
          {
            "name": "Start-PowerBenchmark",
            "line": 427
          },
          {
            "name": "Write-PowerReport",
            "line": 468
          },
          {
            "name": "Start-PowerManagement",
            "line": 507
          }
        ],
        "line_count": 674
      },
      "ops\\Project-Health-Scanner-V4.ps1": {
        "type": "powershell",
        "imports": [],
        "functions": [
          {
            "name": "Write-Log",
            "line": 75
          },
          {
            "name": "Test-SystemRequirements",
            "line": 101
          },
          {
            "name": "Get-ProjectOwnership",
            "line": 133
          },
          {
            "name": "Get-LockFileFreshness",
            "line": 227
          },
          {
            "name": "Generate-EnhancedSBOM",
            "line": 285
          }
        ],
        "line_count": 597
      },
      "ops\\quick-scan.ps1": {
        "type": "powershell",
        "imports": [],
        "functions": [
          {
            "name": "Start-LintJob",
            "line": 16
          }
        ],
        "line_count": 186
      },
      "ops\\RTX-4070-Accelerator-V5.ps1": {
        "type": "powershell",
        "imports": [],
        "functions": [
          {
            "name": "function",
            "line": 40
          },
          {
            "name": "Test-GPUCapabilities",
            "line": 50
          },
          {
            "name": "Test-GPUPerformance",
            "line": 125
          },
          {
            "name": "Test-MemoryOptimization",
            "line": 273
          },
          {
            "name": "Main",
            "line": 401
          },
          {
            "name": "if",
            "line": 456
          }
        ],
        "line_count": 460
      },
      "ops\\RTX-4070-Batch-Processor-V5.ps1": {
        "type": "powershell",
        "imports": [],
        "functions": [
          {
            "name": "function",
            "line": 38
          },
          {
            "name": "Get-ProjectFiles",
            "line": 48
          },
          {
            "name": "Test-GPUCapabilities",
            "line": 92
          },
          {
            "name": "Process-FileBatch",
            "line": 142
          },
          {
            "name": "Main",
            "line": 319
          },
          {
            "name": "if",
            "line": 400
          }
        ],
        "line_count": 404
      },
      "ops\\RTX-4070-Optimizer.ps1": {
        "type": "powershell",
        "imports": [],
        "functions": [
          {
            "name": "Optimize-GPUSettings",
            "line": 92
          },
          {
            "name": "Optimize-PowerManagement",
            "line": 121
          },
          {
            "name": "Optimize-MemoryManagement",
            "line": 149
          },
          {
            "name": "Update-RAGConfiguration",
            "line": 171
          },
          {
            "name": "Start-GPUMonitoring",
            "line": 213
          },
          {
            "name": "Run-GPUBenchmark",
            "line": 246
          }
        ],
        "line_count": 328
      },
      "ops\\RTX-4070-Real-Processor-V5.ps1": {
        "type": "powershell",
        "imports": [],
        "functions": [
          {
            "name": "function",
            "line": 38
          },
          {
            "name": "Get-RealProjectFiles",
            "line": 48
          },
          {
            "name": "Test-RealGPUCapabilities",
            "line": 92
          },
          {
            "name": "Process-RealFileBatch",
            "line": 142
          },
          {
            "name": "Main",
            "line": 319
          },
          {
            "name": "if",
            "line": 400
          }
        ],
        "line_count": 404
      },
      "ops\\RTX-4070-Simple-V5.ps1": {
        "type": "powershell",
        "imports": [],
        "functions": [],
        "line_count": 262
      },
      "ops\\Scan-Secrets-V4.ps1": {
        "type": "powershell",
        "imports": [],
        "functions": [
          {
            "name": "Write-Log",
            "line": 44
          },
          {
            "name": "Get-ShannonEntropy",
            "line": 268
          },
          {
            "name": "Test-Allowlist",
            "line": 296
          },
          {
            "name": "Scan-FileForSecrets",
            "line": 309
          },
          {
            "name": "Export-SARIFReport",
            "line": 410
          },
          {
            "name": "Export-JUnitReport",
            "line": 505
          },
          {
            "name": "Start-SecretScan",
            "line": 556
          },
          {
            "name": "Get-ShannonEntropy",
            "line": 618
          },
          {
            "name": "Test-Allowlist",
            "line": 633
          }
        ],
        "line_count": 816
      },
      "ops\\sentinel_mesh_config.json": {
        "type": "json",
        "keys": [
          "repositories",
          "dashboard_url",
          "alert_email",
          "check_interval",
          "slack_webhook",
          "discord_webhook",
          "auto_fix",
          "evidence_retention_days"
        ],
        "line_count": 22
      },
      "ops\\smart-log-manager-v5.ps1": {
        "type": "powershell",
        "imports": [],
        "functions": [
          {
            "name": "Initialize-LogStructure",
            "line": 28
          },
          {
            "name": "Move-ExistingLogsToMaster",
            "line": 60
          },
          {
            "name": "Create-LogConfig",
            "line": 82
          },
          {
            "name": "Create-LogDocumentation",
            "line": 101
          },
          {
            "name": "Show-LogStatus",
            "line": 148
          }
        ],
        "line_count": 197
      },
      "ops\\Speed-Boost-V4.ps1": {
        "type": "powershell",
        "imports": [],
        "functions": [
          {
            "name": "Optimize-SystemPerformance",
            "line": 80
          },
          {
            "name": "Optimize-RAGSystem",
            "line": 132
          },
          {
            "name": "Optimize-PythonEnvironment",
            "line": 157
          },
          {
            "name": "Start-PerformanceMonitoring",
            "line": 180
          },
          {
            "name": "Run-PerformanceBenchmark",
            "line": 218
          }
        ],
        "line_count": 300
      },
      "ops\\symbol-index-v4.json": {
        "type": "json",
        "keys": [
          "Symbols",
          "Metadata",
          "Files",
          "Summary"
        ],
        "line_count": 13232
      },
      "ops\\Symbol-Indexer-V4.ps1": {
        "type": "powershell",
        "imports": [],
        "functions": [
          {
            "name": "Write-SymbolIndexerLog",
            "line": 286
          },
          {
            "name": "Test-FileAccess",
            "line": 303
          },
          {
            "name": "Get-FileEncoding",
            "line": 315
          },
          {
            "name": "Read-FileContent",
            "line": 338
          },
          {
            "name": "Parse-SymbolsAST",
            "line": 356
          },
          {
            "name": "Parse-SymbolsFallback",
            "line": 472
          },
          {
            "name": "Process-File",
            "line": 519
          },
          {
            "name": "Get-SupportedFiles",
            "line": 581
          },
          {
            "name": "Start-SymbolIndexing",
            "line": 631
          }
        ],
        "line_count": 836
      },
      "ops\\test-simple.ps1": {
        "type": "powershell",
        "imports": [],
        "functions": [],
        "line_count": 4
      },
      "ops\\TruthForge-Auditor-V5.ps1": {
        "type": "powershell",
        "imports": [
          "Microsoft.PowerShell.Utility"
        ],
        "functions": [
          {
            "name": "Write-Log",
            "line": 70
          },
          {
            "name": "Initialize-Auditor",
            "line": 88
          },
          {
            "name": "Find-CodeFiles",
            "line": 119
          },
          {
            "name": "Find-DocumentationFiles",
            "line": 144
          },
          {
            "name": "Analyze-CodeFile",
            "line": 163
          },
          {
            "name": "Analyze-DocumentationFile",
            "line": 243
          },
          {
            "name": "Validate-CodeDocumentationConsistency",
            "line": 294
          },
          {
            "name": "Generate-TestCases",
            "line": 431
          },
          {
            "name": "name",
            "line": 448
          },
          {
            "name": "Run-ValidationTests",
            "line": 493
          },
          {
            "name": "Generate-ValidationReport",
            "line": 548
          },
          {
            "name": "Main",
            "line": 713
          },
          {
            "name": "A",
            "line": 765
          },
          {
            "name": "that",
            "line": 766
          }
        ],
        "line_count": 856
      },
      "ops\\Ultimate-Overclock-Speed-Boost-V5.ps1": {
        "type": "powershell",
        "imports": [],
        "functions": [
          {
            "name": "Get-V5SystemCapabilities",
            "line": 58
          },
          {
            "name": "Optimize-V5CPUPerformance",
            "line": 107
          },
          {
            "name": "Optimize-V5MemoryPerformance",
            "line": 144
          },
          {
            "name": "Optimize-V5GPUPerformance",
            "line": 179
          },
          {
            "name": "Update-V5RAGConfiguration",
            "line": 211
          },
          {
            "name": "Start-V5PerformanceMonitoring",
            "line": 270
          },
          {
            "name": "Run-V5PerformanceBenchmark",
            "line": 302
          },
          {
            "name": "Start-V5UltimateOverclock",
            "line": 367
          }
        ],
        "line_count": 476
      },
      "ops\\Ultimate-Speed-Boost-V4.ps1": {
        "type": "powershell",
        "imports": [],
        "functions": [
          {
            "name": "Optimize-SystemPower",
            "line": 68
          },
          {
            "name": "Optimize-MemoryAndCache",
            "line": 122
          },
          {
            "name": "Optimize-GPUSettings",
            "line": 160
          },
          {
            "name": "Update-RAGConfiguration",
            "line": 198
          },
          {
            "name": "Run-PerformanceBenchmark",
            "line": 249
          },
          {
            "name": "Start-PerformanceMonitoring",
            "line": 267
          },
          {
            "name": "Restore-NormalSettings",
            "line": 283
          }
        ],
        "line_count": 402
      },
      "ops\\V5_CONSOLIDATION_MASTER.py": {
        "type": "python",
        "imports": [
          "os",
          "sys",
          "json",
          "time",
          "shutil",
          "subprocess",
          "psutil",
          "platform",
          "pathlib.Path",
          "datetime.datetime",
          "typing.Dict",
          "typing.List",
          "typing.Any",
          "typing.Tuple",
          "typing.Optional",
          "logging",
          "ctypes",
          "traceback",
          "torch",
          "wmi"
        ],
        "functions": [
          {
            "name": "demonstrate_integrated_system",
            "line": 604,
            "args": []
          },
          {
            "name": "main",
            "line": 670,
            "args": []
          },
          {
            "name": "__init__",
            "line": 44,
            "args": [
              "self"
            ]
          },
          {
            "name": "check_administrator_privileges",
            "line": 97,
            "args": [
              "self"
            ]
          },
          {
            "name": "create_scratch_directory",
            "line": 105,
            "args": [
              "self"
            ]
          },
          {
            "name": "activate_ultimate_performance_mode",
            "line": 124,
            "args": [
              "self"
            ]
          },
          {
            "name": "detect_gpu",
            "line": 184,
            "args": [
              "self"
            ]
          },
          {
            "name": "check_v4_components",
            "line": 236,
            "args": [
              "self"
            ]
          },
          {
            "name": "activate_full_system",
            "line": 256,
            "args": [
              "self"
            ]
          },
          {
            "name": "get_system_status",
            "line": 283,
            "args": [
              "self"
            ]
          },
          {
            "name": "restore_balanced_mode",
            "line": 305,
            "args": [
              "self"
            ]
          },
          {
            "name": "__init__",
            "line": 356,
            "args": [
              "self"
            ]
          },
          {
            "name": "_setup_logging",
            "line": 395,
            "args": [
              "self"
            ]
          },
          {
            "name": "go_big",
            "line": 415,
            "args": [
              "self"
            ]
          },
          {
            "name": "integrate_toolbox_gems",
            "line": 477,
            "args": [
              "self"
            ]
          },
          {
            "name": "_integrate_self_healing",
            "line": 491,
            "args": [
              "self"
            ]
          },
          {
            "name": "_integrate_sentinel_mesh",
            "line": 498,
            "args": [
              "self"
            ]
          },
          {
            "name": "_integrate_health_checker",
            "line": 505,
            "args": [
              "self"
            ]
          },
          {
            "name": "_integrate_ensemble_system",
            "line": 512,
            "args": [
              "self"
            ]
          },
          {
            "name": "_generic_integrate",
            "line": 519,
            "args": [
              "self",
              "src",
              "dst",
              "class_name"
            ]
          },
          {
            "name": "cleanup_duplicates",
            "line": 534,
            "args": [
              "self"
            ]
          },
          {
            "name": "generate_consolidation_report",
            "line": 549,
            "args": [
              "self"
            ]
          },
          {
            "name": "run_full_consolidation",
            "line": 575,
            "args": [
              "self"
            ]
          },
          {
            "name": "analyze_current_state",
            "line": 588,
            "args": [
              "self"
            ]
          }
        ],
        "classes": [
          {
            "name": "SystemController",
            "line": 37,
            "methods": [
              "__init__",
              "check_administrator_privileges",
              "create_scratch_directory",
              "activate_ultimate_performance_mode",
              "detect_gpu",
              "check_v4_components",
              "activate_full_system",
              "get_system_status",
              "restore_balanced_mode"
            ]
          },
          {
            "name": "V5ConsolidationMaster",
            "line": 350,
            "methods": [
              "__init__",
              "_setup_logging",
              "go_big",
              "integrate_toolbox_gems",
              "_integrate_self_healing",
              "_integrate_sentinel_mesh",
              "_integrate_health_checker",
              "_integrate_ensemble_system",
              "_generic_integrate",
              "cleanup_duplicates",
              "generate_consolidation_report",
              "run_full_consolidation",
              "analyze_current_state"
            ]
          }
        ],
        "line_count": 694
      },
      "ops\\VisionGap-Engine-V5.ps1": {
        "type": "powershell",
        "imports": [
          "Microsoft.PowerShell.Utility"
        ],
        "functions": [
          {
            "name": "Write-Log",
            "line": 40
          },
          {
            "name": "Initialize-Engine",
            "line": 58
          },
          {
            "name": "Find-MarkdownFiles",
            "line": 91
          },
          {
            "name": "Analyze-MarkdownContent",
            "line": 110
          },
          {
            "name": "Detect-Gaps",
            "line": 160
          },
          {
            "name": "Extract-Requirements",
            "line": 235
          },
          {
            "name": "Generate-GapReport",
            "line": 281
          },
          {
            "name": "Main",
            "line": 397
          }
        ],
        "line_count": 485
      },
      "ops\\VISIONGAP_ENGINE.py": {
        "type": "python",
        "imports": [
          "os",
          "re",
          "json",
          "uuid",
          "time",
          "logging",
          "pathlib.Path",
          "typing.Dict",
          "typing.List",
          "typing.Any"
        ],
        "functions": [
          {
            "name": "main",
            "line": 199,
            "args": []
          },
          {
            "name": "__init__",
            "line": 39,
            "args": [
              "self",
              "project_root"
            ]
          },
          {
            "name": "_discover_main_project",
            "line": 51,
            "args": [
              "self"
            ]
          },
          {
            "name": "_is_toolbox",
            "line": 74,
            "args": [
              "self",
              "path"
            ]
          },
          {
            "name": "read_dreams",
            "line": 87,
            "args": [
              "self"
            ]
          },
          {
            "name": "_extract_patterns",
            "line": 109,
            "args": [
              "text",
              "patterns"
            ]
          },
          {
            "name": "scan_implementation",
            "line": 119,
            "args": [
              "self"
            ]
          },
          {
            "name": "detect_gaps",
            "line": 132,
            "args": [
              "self",
              "dreams",
              "impl"
            ]
          },
          {
            "name": "_keyword_in_files",
            "line": 163,
            "args": [
              "keyword",
              "stems"
            ]
          },
          {
            "name": "generate_report",
            "line": 170,
            "args": [
              "self",
              "dreams",
              "impl",
              "gaps"
            ]
          }
        ],
        "classes": [
          {
            "name": "VisionGapEngine",
            "line": 30,
            "methods": [
              "__init__",
              "_discover_main_project",
              "_is_toolbox",
              "read_dreams",
              "_extract_patterns",
              "scan_implementation",
              "detect_gaps",
              "_keyword_in_files",
              "generate_report"
            ]
          }
        ],
        "line_count": 208
      },
      "rag\\build_index.py": {
        "type": "python",
        "imports": [
          "os",
          "sys",
          "time",
          "json",
          "argparse",
          "pathlib.Path",
          "typing.List",
          "typing.Dict",
          "typing.Any",
          "typing.Optional",
          "typing.Tuple",
          "logging",
          "torch",
          "numpy",
          "sentence_transformers.SentenceTransformer",
          "faiss",
          "numpy",
          "sentence_transformers.SentenceTransformer",
          "faiss",
          "faiss_gpu_compat.faiss_gpu"
        ],
        "functions": [
          {
            "name": "main",
            "line": 293,
            "args": []
          },
          {
            "name": "__init__",
            "line": 46,
            "args": [
              "self",
              "model_name",
              "chunk_size",
              "chunk_overlap",
              "max_file_size",
              "device"
            ]
          },
          {
            "name": "_auto_detect_device",
            "line": 69,
            "args": [
              "self"
            ]
          },
          {
            "name": "_initialize_model",
            "line": 85,
            "args": [
              "self"
            ]
          },
          {
            "name": "_chunk_text",
            "line": 114,
            "args": [
              "self",
              "text"
            ]
          },
          {
            "name": "_process_file",
            "line": 136,
            "args": [
              "self",
              "file_path"
            ]
          },
          {
            "name": "build_index",
            "line": 180,
            "args": [
              "self",
              "file_paths",
              "output_dir",
              "index_name"
            ]
          }
        ],
        "classes": [
          {
            "name": "DualModeRAGBuilder",
            "line": 43,
            "methods": [
              "__init__",
              "_auto_detect_device",
              "_initialize_model",
              "_chunk_text",
              "_process_file",
              "build_index"
            ]
          }
        ],
        "line_count": 351
      },
      "rag\\build_index_v3.py": {
        "type": "python",
        "imports": [
          "os",
          "sys",
          "json",
          "time",
          "logging",
          "argparse",
          "pathlib.Path",
          "typing.List",
          "typing.Dict",
          "typing.Any",
          "typing.Optional",
          "glob",
          "device_manager.DeviceManager",
          "text_processor.TextProcessor",
          "embedding_engine.EmbeddingEngine"
        ],
        "functions": [
          {
            "name": "main",
            "line": 394,
            "args": []
          },
          {
            "name": "__init__",
            "line": 44,
            "args": [
              "self",
              "config"
            ]
          },
          {
            "name": "_initialize_system",
            "line": 61,
            "args": [
              "self"
            ]
          },
          {
            "name": "discover_files",
            "line": 107,
            "args": [
              "self",
              "source_paths",
              "file_patterns"
            ]
          },
          {
            "name": "_is_text_file",
            "line": 139,
            "args": [
              "self",
              "file_path"
            ]
          },
          {
            "name": "process_files",
            "line": 171,
            "args": [
              "self",
              "file_paths"
            ]
          },
          {
            "name": "build_index",
            "line": 214,
            "args": [
              "self",
              "chunks",
              "output_dir"
            ]
          },
          {
            "name": "_save_metadata",
            "line": 261,
            "args": [
              "self",
              "chunks",
              "output_path"
            ]
          },
          {
            "name": "_save_build_report",
            "line": 285,
            "args": [
              "self",
              "output_path"
            ]
          },
          {
            "name": "run_full_pipeline",
            "line": 340,
            "args": [
              "self",
              "source_paths",
              "output_dir"
            ]
          },
          {
            "name": "_print_summary",
            "line": 370,
            "args": [
              "self"
            ]
          }
        ],
        "classes": [
          {
            "name": "RAGIndexBuilder",
            "line": 41,
            "methods": [
              "__init__",
              "_initialize_system",
              "discover_files",
              "_is_text_file",
              "process_files",
              "build_index",
              "_save_metadata",
              "_save_build_report",
              "run_full_pipeline",
              "_print_summary"
            ]
          }
        ],
        "line_count": 446
      },
      "rag\\context.json": {
        "type": "json",
        "keys": [],
        "line_count": 1
      },
      "rag\\device_manager.py": {
        "type": "python",
        "imports": [
          "os",
          "sys",
          "platform",
          "subprocess",
          "logging",
          "typing.Dict",
          "typing.List",
          "typing.Tuple",
          "typing.Optional",
          "typing.Any",
          "dataclasses.dataclass",
          "enum.Enum",
          "multiprocessing",
          "torch",
          "torch"
        ],
        "functions": [
          {
            "name": "main",
            "line": 383,
            "args": []
          },
          {
            "name": "__init__",
            "line": 50,
            "args": [
              "self",
              "config"
            ]
          },
          {
            "name": "_detect_devices",
            "line": 60,
            "args": [
              "self"
            ]
          },
          {
            "name": "_detect_cpu",
            "line": 72,
            "args": [
              "self"
            ]
          },
          {
            "name": "_detect_gpu",
            "line": 113,
            "args": [
              "self"
            ]
          },
          {
            "name": "_check_cpu_features",
            "line": 164,
            "args": [
              "self"
            ]
          },
          {
            "name": "_check_gpu_features",
            "line": 175,
            "args": [
              "self"
            ]
          },
          {
            "name": "_analyze_capabilities",
            "line": 187,
            "args": [
              "self"
            ]
          },
          {
            "name": "get_optimal_configuration",
            "line": 229,
            "args": [
              "self",
              "mode"
            ]
          },
          {
            "name": "_get_cpu_config",
            "line": 250,
            "args": [
              "self"
            ]
          },
          {
            "name": "_get_gpu_config",
            "line": 261,
            "args": [
              "self"
            ]
          },
          {
            "name": "_get_hybrid_config",
            "line": 275,
            "args": [
              "self"
            ]
          },
          {
            "name": "validate_requirements",
            "line": 289,
            "args": [
              "self"
            ]
          },
          {
            "name": "get_system_summary",
            "line": 308,
            "args": [
              "self"
            ]
          },
          {
            "name": "print_system_summary",
            "line": 342,
            "args": [
              "self"
            ]
          }
        ],
        "classes": [
          {
            "name": "DeviceType",
            "line": 20,
            "methods": []
          },
          {
            "name": "DeviceInfo",
            "line": 28,
            "methods": []
          },
          {
            "name": "SystemCapabilities",
            "line": 39,
            "methods": []
          },
          {
            "name": "DeviceManager",
            "line": 47,
            "methods": [
              "__init__",
              "_detect_devices",
              "_detect_cpu",
              "_detect_gpu",
              "_check_cpu_features",
              "_check_gpu_features",
              "_analyze_capabilities",
              "get_optimal_configuration",
              "_get_cpu_config",
              "_get_gpu_config",
              "_get_hybrid_config",
              "validate_requirements",
              "get_system_summary",
              "print_system_summary"
            ]
          }
        ],
        "line_count": 405
      },
      "rag\\dual_mode_test_report.json": {
        "type": "json",
        "keys": [
          "test_timestamp",
          "system_info",
          "embedding_tests",
          "retrieval_tests",
          "performance_benchmarks",
          "summary"
        ],
        "line_count": 59
      },
      "rag\\embed.ps1": {
        "type": "powershell",
        "imports": [],
        "functions": [],
        "line_count": 230
      },
      "rag\\embedding_engine.py": {
        "type": "python",
        "imports": [
          "os",
          "sys",
          "time",
          "logging",
          "numpy",
          "typing.List",
          "typing.Dict",
          "typing.Any",
          "typing.Optional",
          "typing.Tuple",
          "typing.Union",
          "pathlib.Path",
          "torch",
          "sentence_transformers.SentenceTransformer",
          "faiss"
        ],
        "functions": [
          {
            "name": "main",
            "line": 396,
            "args": []
          },
          {
            "name": "__init__",
            "line": 47,
            "args": [
              "self",
              "model_name",
              "device_mode",
              "chunk_size",
              "batch_size",
              "max_retries",
              "fallback_strategy"
            ]
          },
          {
            "name": "_initialize_engine",
            "line": 79,
            "args": [
              "self"
            ]
          },
          {
            "name": "_configure_device",
            "line": 94,
            "args": [
              "self"
            ]
          },
          {
            "name": "_auto_detect_device",
            "line": 128,
            "args": [
              "self"
            ]
          },
          {
            "name": "_load_model",
            "line": 152,
            "args": [
              "self"
            ]
          },
          {
            "name": "_warmup_model",
            "line": 179,
            "args": [
              "self"
            ]
          },
          {
            "name": "generate_embeddings",
            "line": 196,
            "args": [
              "self",
              "texts",
              "show_progress"
            ]
          },
          {
            "name": "_encode_batch",
            "line": 261,
            "args": [
              "self",
              "texts"
            ]
          },
          {
            "name": "_fallback_encode_batch",
            "line": 277,
            "args": [
              "self",
              "texts"
            ]
          },
          {
            "name": "create_faiss_index",
            "line": 305,
            "args": [
              "self",
              "embeddings",
              "index_type"
            ]
          },
          {
            "name": "save_index",
            "line": 354,
            "args": [
              "self",
              "index",
              "output_path"
            ]
          },
          {
            "name": "get_performance_stats",
            "line": 373,
            "args": [
              "self"
            ]
          },
          {
            "name": "reset_stats",
            "line": 377,
            "args": [
              "self"
            ]
          },
          {
            "name": "__enter__",
            "line": 390,
            "args": [
              "self"
            ]
          },
          {
            "name": "__exit__",
            "line": 392,
            "args": [
              "self",
              "exc_type",
              "exc_val",
              "exc_tb"
            ]
          }
        ],
        "classes": [
          {
            "name": "EmbeddingEngine",
            "line": 44,
            "methods": [
              "__init__",
              "_initialize_engine",
              "_configure_device",
              "_auto_detect_device",
              "_load_model",
              "_warmup_model",
              "generate_embeddings",
              "_encode_batch",
              "_fallback_encode_batch",
              "create_faiss_index",
              "save_index",
              "get_performance_stats",
              "reset_stats"
            ]
          },
          {
            "name": "nullcontext",
            "line": 388,
            "methods": [
              "__enter__",
              "__exit__"
            ]
          }
        ],
        "line_count": 436
      },
      "rag\\emoji_scanner.py": {
        "type": "python",
        "imports": [
          "os",
          "sys",
          "json",
          "time",
          "logging",
          "re",
          "unicodedata",
          "pathlib.Path",
          "typing.List",
          "typing.Dict",
          "typing.Any",
          "typing.Optional",
          "typing.Tuple",
          "typing.Union",
          "dataclasses.dataclass",
          "dataclasses.asdict",
          "datetime.datetime",
          "multiprocessing",
          "torch",
          "device_manager.DeviceManager",
          "device_manager.DeviceType",
          "embedding_engine.EmbeddingEngine",
          "argparse"
        ],
        "functions": [
          {
            "name": "main",
            "line": 610,
            "args": []
          },
          {
            "name": "__init__",
            "line": 69,
            "args": [
              "self",
              "device_mode",
              "verbose",
              "exclude_list",
              "batch_size"
            ]
          },
          {
            "name": "_initialize_scanner",
            "line": 107,
            "args": [
              "self"
            ]
          },
          {
            "name": "_initialize_emoji_patterns",
            "line": 143,
            "args": [
              "self"
            ]
          },
          {
            "name": "_create_emoji_tensor",
            "line": 174,
            "args": [
              "self"
            ]
          },
          {
            "name": "is_emoji_gpu",
            "line": 209,
            "args": [
              "self",
              "text",
              "emoji_tensor"
            ]
          },
          {
            "name": "is_emoji",
            "line": 242,
            "args": [
              "self",
              "char"
            ]
          },
          {
            "name": "find_emojis_in_text_gpu",
            "line": 260,
            "args": [
              "self",
              "text",
              "emoji_tensor"
            ]
          },
          {
            "name": "find_emojis_in_text",
            "line": 285,
            "args": [
              "self",
              "text"
            ]
          },
          {
            "name": "_get_current_device_info",
            "line": 299,
            "args": [
              "self"
            ]
          },
          {
            "name": "scan_file",
            "line": 314,
            "args": [
              "self",
              "file_path"
            ]
          },
          {
            "name": "_get_gpu_utilization",
            "line": 365,
            "args": [
              "self"
            ]
          },
          {
            "name": "scan_file_batch",
            "line": 389,
            "args": [
              "self",
              "file_paths"
            ]
          },
          {
            "name": "scan_directory",
            "line": 424,
            "args": [
              "self",
              "directory_path",
              "recursive"
            ]
          },
          {
            "name": "generate_report",
            "line": 520,
            "args": [
              "self",
              "results",
              "summary",
              "output_dir"
            ]
          },
          {
            "name": "get_performance_summary",
            "line": 574,
            "args": [
              "self"
            ]
          },
          {
            "name": "get_scan_summary",
            "line": 582,
            "args": [
              "self"
            ]
          }
        ],
        "classes": [
          {
            "name": "EmojiDetectionResult",
            "line": 43,
            "methods": []
          },
          {
            "name": "ScanSummary",
            "line": 56,
            "methods": []
          },
          {
            "name": "PythonEmojiScanner",
            "line": 66,
            "methods": [
              "__init__",
              "_initialize_scanner",
              "_initialize_emoji_patterns",
              "_create_emoji_tensor",
              "is_emoji_gpu",
              "is_emoji",
              "find_emojis_in_text_gpu",
              "find_emojis_in_text",
              "_get_current_device_info",
              "scan_file",
              "_get_gpu_utilization",
              "scan_file_batch",
              "scan_directory",
              "generate_report",
              "get_performance_summary",
              "get_scan_summary"
            ]
          }
        ],
        "line_count": 666
      },
      "rag\\emoji_scanner_fixed.py": {
        "type": "python",
        "imports": [
          "os",
          "sys",
          "json",
          "time",
          "logging",
          "re",
          "unicodedata",
          "pathlib.Path",
          "typing.List",
          "typing.Dict",
          "typing.Any",
          "typing.Optional",
          "typing.Tuple",
          "typing.Union",
          "dataclasses.dataclass",
          "dataclasses.asdict",
          "datetime.datetime",
          "torch",
          "argparse"
        ],
        "functions": [
          {
            "name": "main",
            "line": 451,
            "args": []
          },
          {
            "name": "__init__",
            "line": 62,
            "args": [
              "self",
              "device_mode",
              "verbose",
              "exclude_list",
              "batch_size"
            ]
          },
          {
            "name": "_initialize_gpu_emoji_detection",
            "line": 93,
            "args": [
              "self"
            ]
          },
          {
            "name": "_get_emoji_unicode_chars",
            "line": 128,
            "args": [
              "self"
            ]
          },
          {
            "name": "find_emojis_in_text_gpu",
            "line": 148,
            "args": [
              "self",
              "text",
              "emoji_tensor"
            ]
          },
          {
            "name": "find_emojis_in_text",
            "line": 195,
            "args": [
              "self",
              "text"
            ]
          },
          {
            "name": "_is_emoji",
            "line": 210,
            "args": [
              "self",
              "char"
            ]
          },
          {
            "name": "scan_file",
            "line": 231,
            "args": [
              "self",
              "file_path"
            ]
          },
          {
            "name": "scan_directory",
            "line": 297,
            "args": [
              "self",
              "directory_path",
              "recursive"
            ]
          },
          {
            "name": "_get_current_device_info",
            "line": 386,
            "args": [
              "self"
            ]
          },
          {
            "name": "generate_report",
            "line": 401,
            "args": [
              "self",
              "results",
              "summary",
              "output_dir"
            ]
          }
        ],
        "classes": [
          {
            "name": "EmojiDetectionResult",
            "line": 36,
            "methods": []
          },
          {
            "name": "ScanSummary",
            "line": 49,
            "methods": []
          },
          {
            "name": "FixedEmojiScanner",
            "line": 59,
            "methods": [
              "__init__",
              "_initialize_gpu_emoji_detection",
              "_get_emoji_unicode_chars",
              "find_emojis_in_text_gpu",
              "find_emojis_in_text",
              "_is_emoji",
              "scan_file",
              "scan_directory",
              "_get_current_device_info",
              "generate_report"
            ]
          }
        ],
        "line_count": 495
      },
      "rag\\emoji_scanner_simple.py": {
        "type": "python",
        "imports": [
          "os",
          "sys",
          "json",
          "time",
          "logging",
          "re",
          "unicodedata",
          "pathlib.Path",
          "typing.List",
          "typing.Dict",
          "typing.Any",
          "typing.Optional",
          "typing.Tuple",
          "typing.Union",
          "dataclasses.dataclass",
          "dataclasses.asdict",
          "datetime.datetime",
          "multiprocessing",
          "torch",
          "argparse"
        ],
        "functions": [
          {
            "name": "main",
            "line": 543,
            "args": []
          },
          {
            "name": "__init__",
            "line": 63,
            "args": [
              "self",
              "device_mode",
              "verbose",
              "exclude_list",
              "batch_size"
            ]
          },
          {
            "name": "_initialize_emoji_patterns",
            "line": 101,
            "args": [
              "self"
            ]
          },
          {
            "name": "_create_emoji_tensor",
            "line": 140,
            "args": [
              "self"
            ]
          },
          {
            "name": "_get_current_device_info",
            "line": 175,
            "args": [
              "self"
            ]
          },
          {
            "name": "is_emoji",
            "line": 190,
            "args": [
              "self",
              "char"
            ]
          },
          {
            "name": "is_emoji_gpu",
            "line": 198,
            "args": [
              "self",
              "text",
              "emoji_tensor"
            ]
          },
          {
            "name": "find_emojis_in_text",
            "line": 231,
            "args": [
              "self",
              "text"
            ]
          },
          {
            "name": "find_emojis_in_text_gpu",
            "line": 243,
            "args": [
              "self",
              "text",
              "emoji_tensor"
            ]
          },
          {
            "name": "scan_file",
            "line": 268,
            "args": [
              "self",
              "file_path"
            ]
          },
          {
            "name": "_get_gpu_utilization",
            "line": 319,
            "args": [
              "self"
            ]
          },
          {
            "name": "scan_file_batch",
            "line": 343,
            "args": [
              "self",
              "file_paths"
            ]
          },
          {
            "name": "scan_directory",
            "line": 390,
            "args": [
              "self",
              "directory_path",
              "recursive"
            ]
          },
          {
            "name": "generate_report",
            "line": 498,
            "args": [
              "self",
              "results",
              "summary",
              "output_dir"
            ]
          },
          {
            "name": "get_performance_summary",
            "line": 539,
            "args": [
              "self"
            ]
          }
        ],
        "classes": [
          {
            "name": "EmojiDetectionResult",
            "line": 37,
            "methods": []
          },
          {
            "name": "ScanSummary",
            "line": 50,
            "methods": []
          },
          {
            "name": "SimpleEmojiScanner",
            "line": 60,
            "methods": [
              "__init__",
              "_initialize_emoji_patterns",
              "_create_emoji_tensor",
              "_get_current_device_info",
              "is_emoji",
              "is_emoji_gpu",
              "find_emojis_in_text",
              "find_emojis_in_text_gpu",
              "scan_file",
              "_get_gpu_utilization",
              "scan_file_batch",
              "scan_directory",
              "generate_report",
              "get_performance_summary"
            ]
          }
        ],
        "line_count": 622
      },
      "rag\\emoji_scanner_vram_optimized.py": {
        "type": "python",
        "imports": [
          "__future__.annotations",
          "argparse",
          "json",
          "logging",
          "os",
          "time",
          "unicodedata",
          "dataclasses.asdict",
          "dataclasses.dataclass",
          "datetime.datetime",
          "pathlib.Path",
          "typing.Dict",
          "typing.List",
          "typing.Tuple",
          "typing.Optional",
          "mmap",
          "tempfile",
          "shutil",
          "torch"
        ],
        "functions": [
          {
            "name": "main",
            "line": 499,
            "args": []
          },
          {
            "name": "__init__",
            "line": 98,
            "args": [
              "self",
              "max_ram_gb"
            ]
          },
          {
            "name": "load_files_to_ram",
            "line": 103,
            "args": [
              "self",
              "file_paths",
              "verbose"
            ]
          },
          {
            "name": "get_file_content",
            "line": 141,
            "args": [
              "self",
              "file_path"
            ]
          },
          {
            "name": "clear_ram",
            "line": 145,
            "args": [
              "self"
            ]
          },
          {
            "name": "__init__",
            "line": 162,
            "args": [
              "self"
            ]
          },
          {
            "name": "_is_emoji",
            "line": 177,
            "args": [
              "char"
            ]
          },
          {
            "name": "_scan_ram_file",
            "line": 218,
            "args": [
              "self",
              "file_path",
              "content"
            ]
          },
          {
            "name": "scan_directory",
            "line": 296,
            "args": [
              "self",
              "directory"
            ]
          },
          {
            "name": "generate_report",
            "line": 459,
            "args": [
              "results",
              "summary",
              "out_dir"
            ]
          }
        ],
        "classes": [
          {
            "name": "EmojiResult",
            "line": 48,
            "methods": []
          },
          {
            "name": "ScanSummary",
            "line": 58,
            "methods": []
          },
          {
            "name": "RAMFileLoader",
            "line": 95,
            "methods": [
              "__init__",
              "load_files_to_ram",
              "get_file_content",
              "clear_ram"
            ]
          },
          {
            "name": "EmojiScanner",
            "line": 153,
            "methods": [
              "__init__",
              "_is_emoji",
              "_scan_ram_file",
              "scan_directory",
              "generate_report"
            ]
          }
        ],
        "line_count": 537
      },
      "rag\\faiss_gpu_compat.py": {
        "type": "python",
        "imports": [
          "faiss",
          "logging"
        ],
        "functions": [
          {
            "name": "has_gpu_resources",
            "line": 16,
            "args": []
          },
          {
            "name": "has_gpu_index_types",
            "line": 21,
            "args": []
          },
          {
            "name": "create_gpu_resources",
            "line": 26,
            "args": []
          },
          {
            "name": "index_cpu_to_gpu",
            "line": 39,
            "args": [
              "resources",
              "gpu_id",
              "index"
            ]
          },
          {
            "name": "index_gpu_to_cpu",
            "line": 56,
            "args": [
              "gpu_index"
            ]
          },
          {
            "name": "get_gpu_info",
            "line": 69,
            "args": []
          }
        ],
        "classes": [
          {
            "name": "FAISSGPUCompat",
            "line": 12,
            "methods": [
              "has_gpu_resources",
              "has_gpu_index_types",
              "create_gpu_resources",
              "index_cpu_to_gpu",
              "index_gpu_to_cpu",
              "get_gpu_info"
            ]
          }
        ],
        "line_count": 92
      },
      "rag\\hybrid_performance_report_v4.json": {
        "type": "json",
        "keys": [
          "platform",
          "gpu_info",
          "test_results"
        ],
        "line_count": 21
      },
      "rag\\hybrid_rag_v4.py": {
        "type": "python",
        "imports": [
          "os",
          "sys",
          "time",
          "json",
          "shutil",
          "tempfile",
          "threading",
          "queue",
          "psutil",
          "gc",
          "pathlib.Path",
          "typing.Dict",
          "typing.List",
          "typing.Tuple",
          "typing.Optional",
          "typing.Any",
          "typing.Union",
          "concurrent.futures.ThreadPoolExecutor",
          "concurrent.futures.ProcessPoolExecutor",
          "dataclasses.dataclass",
          "logging",
          "torch",
          "numpy",
          "sentence_transformers.SentenceTransformer",
          "faiss",
          "device_manager.DeviceManager",
          "traceback"
        ],
        "functions": [
          {
            "name": "main",
            "line": 515,
            "args": []
          },
          {
            "name": "__init__",
            "line": 78,
            "args": [
              "self",
              "size_gb"
            ]
          },
          {
            "name": "create_ram_disk",
            "line": 84,
            "args": [
              "self"
            ]
          },
          {
            "name": "cleanup_ram_disk",
            "line": 95,
            "args": [
              "self"
            ]
          },
          {
            "name": "get_available_space",
            "line": 104,
            "args": [
              "self"
            ]
          },
          {
            "name": "can_fit_file",
            "line": 114,
            "args": [
              "self",
              "file_size"
            ]
          },
          {
            "name": "__init__",
            "line": 121,
            "args": [
              "self"
            ]
          },
          {
            "name": "get_system_memory",
            "line": 125,
            "args": [
              "self"
            ]
          },
          {
            "name": "get_gpu_memory",
            "line": 135,
            "args": [
              "self"
            ]
          },
          {
            "name": "should_cleanup_memory",
            "line": 157,
            "args": [
              "self"
            ]
          },
          {
            "name": "cleanup_memory",
            "line": 165,
            "args": [
              "self"
            ]
          },
          {
            "name": "__init__",
            "line": 191,
            "args": [
              "self",
              "config"
            ]
          },
          {
            "name": "_init_device_manager",
            "line": 212,
            "args": [
              "self"
            ]
          },
          {
            "name": "_init_models",
            "line": 222,
            "args": [
              "self"
            ]
          },
          {
            "name": "_select_optimal_device",
            "line": 240,
            "args": [
              "self",
              "task",
              "file_size"
            ]
          },
          {
            "name": "_process_file",
            "line": 270,
            "args": [
              "self",
              "task"
            ]
          },
          {
            "name": "_processing_worker",
            "line": 320,
            "args": [
              "self",
              "worker_id"
            ]
          },
          {
            "name": "start_processing_workers",
            "line": 349,
            "args": [
              "self",
              "num_workers"
            ]
          },
          {
            "name": "stop_processing_workers",
            "line": 361,
            "args": [
              "self"
            ]
          },
          {
            "name": "process_files",
            "line": 372,
            "args": [
              "self",
              "file_paths",
              "batch_size"
            ]
          },
          {
            "name": "build_index",
            "line": 427,
            "args": [
              "self",
              "results"
            ]
          },
          {
            "name": "search",
            "line": 454,
            "args": [
              "self",
              "query",
              "top_k"
            ]
          },
          {
            "name": "get_performance_stats",
            "line": 477,
            "args": [
              "self"
            ]
          },
          {
            "name": "cleanup",
            "line": 494,
            "args": [
              "self"
            ]
          }
        ],
        "classes": [
          {
            "name": "ProcessingTask",
            "line": 57,
            "methods": []
          },
          {
            "name": "ProcessingResult",
            "line": 65,
            "methods": []
          },
          {
            "name": "RAMDiskManager",
            "line": 75,
            "methods": [
              "__init__",
              "create_ram_disk",
              "cleanup_ram_disk",
              "get_available_space",
              "can_fit_file"
            ]
          },
          {
            "name": "MemoryManager",
            "line": 118,
            "methods": [
              "__init__",
              "get_system_memory",
              "get_gpu_memory",
              "should_cleanup_memory",
              "cleanup_memory"
            ]
          },
          {
            "name": "HybridRAGProcessor",
            "line": 188,
            "methods": [
              "__init__",
              "_init_device_manager",
              "_init_models",
              "_select_optimal_device",
              "_process_file",
              "_processing_worker",
              "start_processing_workers",
              "stop_processing_workers",
              "process_files",
              "build_index",
              "search",
              "get_performance_stats",
              "cleanup"
            ]
          }
        ],
        "line_count": 595
      },
      "rag\\rag_system_test_report.json": {
        "type": "json",
        "keys": [
          "test_summary",
          "component_results",
          "recommendations"
        ],
        "line_count": 202
      },
      "rag\\retrieve.py": {
        "type": "python",
        "imports": [
          "os",
          "sys",
          "json",
          "time",
          "logging",
          "argparse",
          "faiss",
          "typing.Dict",
          "typing.List",
          "typing.Tuple",
          "typing.Optional",
          "pathlib.Path",
          "torch",
          "sentence_transformers.SentenceTransformer",
          "numpy",
          "multiprocessing",
          "faiss_gpu_compat.faiss_gpu"
        ],
        "functions": [
          {
            "name": "load_config",
            "line": 342,
            "args": []
          },
          {
            "name": "main",
            "line": 358,
            "args": []
          },
          {
            "name": "__init__",
            "line": 40,
            "args": [
              "self",
              "config"
            ]
          },
          {
            "name": "setup_devices",
            "line": 60,
            "args": [
              "self"
            ]
          },
          {
            "name": "setup_models",
            "line": 99,
            "args": [
              "self"
            ]
          },
          {
            "name": "load_index_and_metadata",
            "line": 137,
            "args": [
              "self"
            ]
          },
          {
            "name": "encode_query_hybrid",
            "line": 168,
            "args": [
              "self",
              "query"
            ]
          },
          {
            "name": "search_index_hybrid",
            "line": 205,
            "args": [
              "self",
              "query_emb",
              "topk"
            ]
          },
          {
            "name": "retrieve_documents",
            "line": 237,
            "args": [
              "self",
              "query",
              "topk"
            ]
          },
          {
            "name": "_score_to_relevance",
            "line": 266,
            "args": [
              "self",
              "score"
            ]
          },
          {
            "name": "save_results",
            "line": 279,
            "args": [
              "self",
              "results",
              "output_path"
            ]
          },
          {
            "name": "display_results_summary",
            "line": 295,
            "args": [
              "self",
              "results"
            ]
          }
        ],
        "classes": [
          {
            "name": "DualModeRAGRetrieverV4",
            "line": 37,
            "methods": [
              "__init__",
              "setup_devices",
              "setup_models",
              "load_index_and_metadata",
              "encode_query_hybrid",
              "search_index_hybrid",
              "retrieve_documents",
              "_score_to_relevance",
              "save_results",
              "display_results_summary"
            ]
          }
        ],
        "line_count": 413
      },
      "rag\\retrieve_v3.py": {
        "type": "python",
        "imports": [
          "os",
          "sys",
          "json",
          "time",
          "logging",
          "argparse",
          "pathlib.Path",
          "typing.List",
          "typing.Dict",
          "typing.Any",
          "typing.Optional",
          "typing.Tuple",
          "numpy",
          "device_manager.DeviceManager",
          "embedding_engine.EmbeddingEngine",
          "faiss"
        ],
        "functions": [
          {
            "name": "main",
            "line": 357,
            "args": []
          },
          {
            "name": "__init__",
            "line": 48,
            "args": [
              "self",
              "index_dir",
              "config"
            ]
          },
          {
            "name": "_initialize_system",
            "line": 73,
            "args": [
              "self"
            ]
          },
          {
            "name": "_load_index",
            "line": 104,
            "args": [
              "self"
            ]
          },
          {
            "name": "search",
            "line": 145,
            "args": [
              "self",
              "query",
              "top_k",
              "similarity_threshold"
            ]
          },
          {
            "name": "_fallback_search",
            "line": 208,
            "args": [
              "self",
              "query_vector",
              "top_k"
            ]
          },
          {
            "name": "batch_search",
            "line": 232,
            "args": [
              "self",
              "queries",
              "top_k",
              "similarity_threshold"
            ]
          },
          {
            "name": "get_chunk_by_id",
            "line": 256,
            "args": [
              "self",
              "chunk_id"
            ]
          },
          {
            "name": "get_chunks_by_file",
            "line": 262,
            "args": [
              "self",
              "file_path"
            ]
          },
          {
            "name": "get_file_summary",
            "line": 272,
            "args": [
              "self"
            ]
          },
          {
            "name": "get_index_stats",
            "line": 301,
            "args": [
              "self"
            ]
          },
          {
            "name": "print_index_summary",
            "line": 332,
            "args": [
              "self"
            ]
          }
        ],
        "classes": [
          {
            "name": "RAGRetriever",
            "line": 45,
            "methods": [
              "__init__",
              "_initialize_system",
              "_load_index",
              "search",
              "_fallback_search",
              "batch_search",
              "get_chunk_by_id",
              "get_chunks_by_file",
              "get_file_summary",
              "get_index_stats",
              "print_index_summary"
            ]
          }
        ],
        "line_count": 419
      }
    }
  },
  "estimated_tokens": 65.0,
  "related_chunks": [
    "v5_core_systems",
    "legacy_v1_v4_systems"
  ]
}